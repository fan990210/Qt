1 UI 设计器的使用
    （1）窗口大小一般为 800*480
    （2）Lable 控件显示文字
        修改属性 font 修改字体
        修改属性 geometry 的宽度和高度修改显示框的大小
        修改属性 geometry 的 x 和 y 修改显示框的位置
    （3）Push Button 按钮控件
        
2 Qt 信号槽介绍
    （1）信号与槽关联是用 QObject::connect() 函数实现的，基本格式为：
            QObject::connect(sender, SIGNAL(signal()), receiver, SLOT(slot()));
        connect() 是 QObject 类的一个静态函数，而 QObject 是所有 Qt 类的基类，在实际调用时可以忽略前面的限定符，所以可以直接写为：
            connect(sender, SIGNAL(signal()), receiver, SLOT(slot()));
        其中，sender 是发射对象的名称，signal() 是信号名称。信号可以看作是特殊的函数，需要带括号，有参数时还需要指明参数。receiver 是接收信号的对象名称，slot() 是槽函数的名称，需要带括号，有参数时还需要指明参数。
    （2）断开信号槽连接的方法：
        方法一： 断开一切与 myObject 连接的信号与槽。
                    disconnect(myObject, 0, 0, 0);
                相当于非静止重载函数：myObject->disconnect();
        方法二： 断开所有连接到特定信号的东西：
                    disconnect(myObject, SIGNAL(mySignal()), 0, 0);
                相当于非静止重载函数：myObject->disconnect(SIGNAL(mySignal()));
        方法三： 与指定接收者断开连接：
                    disconnect(myObject, 0, myReceiver, 0);
                相当于非静态重载函数：myObject->disconnect(myReceiver);
    例：使用 pushButton 控件控制主窗口关闭，在 mainwindow.cpp 中使用 connect 函数实现
        #include "mainwindow.h"
        #include "ui_mainwindow.h"
        #include "QDebug"

        MainWindow::MainWindow(QWidget *parent)
            : QMainWindow(parent)
            , ui(new Ui::MainWindow)
        {
            ui->setupUi(this);
            connect(ui->pushButton, SIGNAL(clicked()), this, SLOT(close()));
        }
        MainWindow::~MainWindow()
        {
            delete ui;
        }

3 自定义信号槽
    （1）新建 C++ 文件：选择 C++ Class ， Class name 中输入文件名称，Base class 中选择 QObject ，完成即可
    （2）signals: 为 Qt 信号的关键字，自定义的信号写在关键字下面，只需要声明，不需要定义
    （3）槽写在 “public slots:” 下边，需要声明，也需要定义
    （4）emit 为发射信号的关键字，Qt 独有。 例：emit school->sendMessages();

    
